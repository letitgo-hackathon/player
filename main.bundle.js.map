{"version":3,"sources":["./src/$_lazy_route_resource lazy","./src/app/app.component.html","./src/app/app.component.scss","./src/app/app.component.ts","./src/app/app.module.ts","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":";;;;;AAAA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA,4CAA4C,WAAW;AACvD;AACA;AACA,4E;;;;;;;ACVA,ugBAAugB,2/B;;;;;;;ACAvgB,mB;;;;;;;;;;;;;;;;;;;ACAgF;AAchF;IALA;QAOE,sBAAsB;QACtB,UAAK,GAAG,gCAAgC,CAAC;QAGzC,oCAAoC;QACpC,WAAM,GAAG,oEAAoE,CAAC;QAC9E,kCAAkC;QAClC,UAAK,GAAG,EAAE,CAAC;QAEX,SAAI,GAAC,EAAE,CAAC;IA6BV,CAAC;IAzBC,sCAAe,GAAf;QAGE,IAAI,CAAC,gBAAgB,EAAE,CAAC;IAC1B,CAAC;IAED,uCAAgB,GAAhB;QACE,IAAM,OAAO,GAAG;YACd,QAAQ,EAAE,IAAI;YACd,QAAQ,EAAE,KAAK;YACf,OAAO,EAAE,MAAM;YACf,SAAS,EAAE,CAAC,OAAO,CAAC;SACrB,CAAC;QAEF,IAAI,CAAC,MAAM,GAAG,IAAI,OAAO,CAAC,IAAI,CAAC,GAAG,CAAC,aAAa,EAAE,OAAO,EAAE;YACzD,OAAO,CAAC,GAAG,CAAC,uBAAuB,CAAC,CAAC;QACvC,CAAC,CAAC,CAAC;QACH,IAAI,CAAC,MAAM,CAAC,kBAAkB,EAAE,CAAC;IACnC,CAAC;IAED,iCAAU,GAAV;QACE,2CAA2C;QAC3C,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC,EAAC,IAAI,EAAE,IAAI,CAAC,IAAI,KAAG,KAAK,EAAC,CAAC,uBAAuB,CAAC,CAAC,CAAC,WAAW,EAAE,GAAG,EAAE,IAAI,CAAC,KAAK,EAAC,CAAC,CAAC;IACrG,CAAC;IAzBmB;QAAnB,yEAAS,CAAC,OAAO,CAAC;kCAAM,iEAAU;6CAAC;IAbzB,YAAY;QALxB,wEAAS,CAAC;YACT,QAAQ,EAAE,UAAU;;;SAGrB,CAAC;OACW,YAAY,CAwCxB;IAAD,mBAAC;CAAA;AAxCwB;;;;;;;;;;;;;;;;;;;;ACdiC;AACjB;AAEI;AACE;AAc/C;IAAA;IAAyB,CAAC;IAAb,SAAS;QAXrB,uEAAQ,CAAC;YACR,YAAY,EAAE;gBACZ,oEAAY;aACb;YACD,OAAO,EAAE;gBACP,gFAAa;gBACb,mEAAW;aACZ;YACD,SAAS,EAAE,EAAE;YACb,SAAS,EAAE,CAAC,oEAAY,CAAC;SAC1B,CAAC;OACW,SAAS,CAAI;IAAD,gBAAC;CAAA;AAAJ;;;;;;;;;AClBtB;AAAA,mFAAmF;AACnF,8FAA8F;AAC9F,yEAAyE;AACzE,gFAAgF;AAEzE,IAAM,WAAW,GAAG;IACzB,UAAU,EAAE,KAAK;CAClB,CAAC;;;;;;;;;ACPF;AAAA;AAAA;AAAA;AAAA;AAA+C;AAC4B;AAE9B;AACY;AAEzD,EAAE,CAAC,CAAC,8EAAW,CAAC,UAAU,CAAC,CAAC,CAAC;IAC3B,8EAAc,EAAE,CAAC;AACnB,CAAC;AAED,yGAAsB,EAAE,CAAC,eAAe,CAAC,kEAAS,CAAC;KAChD,KAAK,CAAC,aAAG,IAAI,cAAO,CAAC,GAAG,CAAC,GAAG,CAAC,EAAhB,CAAgB,CAAC,CAAC","file":"main.bundle.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncatched exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tthrow new Error(\"Cannot find module '\" + req + \"'.\");\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/$$_lazy_route_resource lazy\n// module id = ./src/$$_lazy_route_resource lazy recursive\n// module chunks = main","module.exports = \"<div class=\\\"container-fluid\\\">\\n  <div class=\\\"container\\\">\\n    <div class=\\\"row\\\">\\n      <div class=\\\"col\\\">\\n        <div class=\\\"jumbotron\\\">\\n          <h3 class=\\\"text-center\\\">LET IT GO - CLOUD VIDEO PLAYER</h3>\\n        </div>\\n      </div>\\n    </div>\\n    <div class=\\\"row\\\">\\n      <div class=\\\"col-12 text-center\\\">\\n        <video #myvid id=\\\"my-video\\\" class=\\\"video-js vjs-big-play-centered mini-play\\\" width=\\\"640\\\" height=\\\"360\\\" [poster]=\\\"poster\\\"\\n          style=\\\"margin: auto;\\\">\\n        </video>\\n      </div>\\n    </div>\\n    <div class=\\\"row text-center\\\">\\n      <form class=\\\"form-inline p-2 col-5 offset-4\\\" #form=\\\"ngForm\\\">\\n        <label class=\\\"sr-only\\\" for=\\\"video\\\">Url\\n        </label>\\n        <input [(ngModel)]=\\\"video\\\" id='video' name='video' class=\\\"form-control\\\" placeholder=\\\"url\\\" />\\n\\n        <div class=\\\"form-check m-2\\\">\\n              <input [(ngModel)]=\\\"type\\\" name=\\\"type\\\" type=\\\"radio\\\" ngModel class=\\\"form-check-input\\\"\\n                  id='type' value=\\\"HLS\\\"/>\\n                  <label for=\\\"type\\\" class=\\\"form-check-label\\\">HLS</label>\\n        </div>\\n        <div class=\\\"form-check m-2\\\">\\n          <input [(ngModel)]=\\\"type\\\" name=\\\"type\\\" type=\\\"radio\\\" class=\\\"form-check-input\\\"\\n              id='type' value=\\\"MP4\\\"/>\\n              <label for=\\\"type\\\" class=\\\"form-check-label\\\">MP4</label>\\n\\n        </div>\\n\\n        <button class=\\\"btn btn-primary m-2\\\" (click)='reproducir()'>Ver</button>\\n\\n      </form>\\n  </div>\\n</div>\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/app.component.html\n// module id = ./src/app/app.component.html\n// module chunks = main","module.exports = \"\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/app.component.scss\n// module id = ./src/app/app.component.scss\n// module chunks = main","import { Component, AfterViewInit, ViewChild, ElementRef } from '@angular/core';\nimport * as AWS from 'aws-cloudfront-sign'; \nimport * as hls from 'videojs-hls-quality-selector'; \n\nimport { FormsModule, NgForm }   from '@angular/forms';\n\n// Declara a lib do videojs como externa ao angular\ndeclare let videojs: any;\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent implements AfterViewInit {\n\n  // Titulo do component\n  title = 'LET IT GO - CLOUD VIDEO PLAYER';\n  // Instancia do video.js.\n  vidObj: any;\n  // Poster para ser usado no video.js\n  poster = 'https://www.safefleet.net/wp-content/uploads/2017/08/sf-logo-2.png';\n  // URL do video a ser reproduzido.\n  video = '';\n\n  type='';\n  // Acessa o elemento video do html5 via viewchild.\n  @ViewChild('myvid') vid: ElementRef;\n\n  ngAfterViewInit() {\n    \n\n    this.initializePlayer();\n  }\n\n  initializePlayer(){\n    const options = {\n      controls: true,\n      autoplay: false,\n      preload: 'auto',\n      techOrder: ['html5']\n    };\n    \n    this.vidObj = new videojs(this.vid.nativeElement, options, function onPlayerReady() {\n      videojs.log('Your player is ready!');\n    });\n    this.vidObj.hlsQualitySelector();\n  }\n\n  reproducir(){\n    //console.log(this.type + '' + this.video);\n    this.vidObj.src({type: this.type==='HLS'? 'application/x-mpegURL' : 'video/mp4', src: this.video});\n  }\n\n}\n\n\n// WEBPACK FOOTER //\n// ./src/app/app.component.ts","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { FormsModule } from '@angular/forms';\nimport { AppComponent } from './app.component';\n\n\n@NgModule({\n  declarations: [\n    AppComponent\n  ],\n  imports: [\n    BrowserModule,\n    FormsModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/app.module.ts","// The file contents for the current environment will overwrite these during build.\n// The build system defaults to the dev environment which uses `environment.ts`, but if you do\n// `ng build --env=prod` then `environment.prod.ts` will be used instead.\n// The list of which env maps to which file can be found in `.angular-cli.json`.\n\nexport const environment = {\n  production: false\n};\n\n\n\n// WEBPACK FOOTER //\n// ./src/environments/environment.ts","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n\n\n\n// WEBPACK FOOTER //\n// ./src/main.ts"],"sourceRoot":"webpack:///"}